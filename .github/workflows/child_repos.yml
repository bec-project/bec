name: Run Pytest with Coverage
on: 
  workflow_call:
    inputs:
      BEC_WIDGETS_BRANCH:
        description: 'Branch for BEC Widgets'
        required: false
        default: 'main'
        type: string
      BEC_CORE_BRANCH:
        description: 'Branch for BEC Core'
        required: false
        default: 'main'
        type: string
      OPHYD_DEVICES_BRANCH:
        description: 'Branch for Ophyd Devices'
        required: false
        default: 'main'
        type: string



jobs:
  bec-widgets:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    env: 
      QTWEBENGINE_DISABLE_SANDBOX: 1
      QT_QPA_PLATFORM: "offscreen"

    steps:
      - name: Checkout BEC Widgets
        uses: actions/checkout@v4
        with:
          repository: bec-project/bec_widgets
          ref: ${{ inputs.BEC_WIDGETS_BRANCH }}

      - name: Install BEC Widgets and dependencies
        uses: ./.github/actions/bw_install
        with:
          BEC_WIDGETS_BRANCH: ${{ inputs.BEC_WIDGETS_BRANCH }}
          BEC_CORE_BRANCH: ${{ inputs.BEC_CORE_BRANCH }}
          OPHYD_DEVICES_BRANCH: ${{ inputs.OPHYD_DEVICES_BRANCH }}
          PYTHON_VERSION: '3.11'
      - name: Run Pytest
        run: |
          pip install pytest pytest-random-order
          pytest -v --maxfail=2 --junitxml=report.xml --random-order ./tests/unit_tests
  ophyd_devices:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout Ophyd Devices
        uses: actions/checkout@v4
        with:
          repository: bec-project/ophyd_devices
          ref: ${{ inputs.OPHYD_DEVICES_BRANCH }}

      - name: Install Ophyd Devices and dependencies
        uses: ./.github/actions/ophyd_devices_install
        with:
          OPHYD_DEVICES_BRANCH: ${{ inputs.OPHYD_DEVICES_BRANCH }}
          BEC_CORE_BRANCH: ${{ inputs.BEC_CORE_BRANCH }}
          PYTHON_VERSION: '3.11'
      - name: Run Pytest
        run: |
          pip install pytest pytest-random-order
          pytest -v --maxfail=2 --junitxml=report.xml --random-order ./tests

  plugin_repos:
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        shell: bash -el {0}

    env: 
      QTWEBENGINE_DISABLE_SANDBOX: 1
      QT_QPA_PLATFORM: "offscreen"

    strategy:
      matrix:
        beamline_repo: [
          {url: 'https://github.com/bec-project/addams_bec.git', 'name': 'addams_bec'},
          {url: 'https://github.com/bec-project/csaxs_bec.git', 'name': 'csaxs_bec'},
          {url: 'https://github.com/bec-project/debye_bec.git', 'name': 'debye_bec'},
          {url: 'https://github.com/bec-project/detector_group_bec.git', 'name': 'detector_group_bec'},
          {url: 'https://github.com/bec-project/microxas_bec.git', 'name': 'microxas_bec'},
          {url: 'https://github.com/bec-project/phoenix_bec.git', 'name': 'phoenix_bec'},
          {url: 'https://github.com/bec-project/pxi_bec.git', 'name': 'pxi_bec'},
          {url: 'https://github.com/bec-project/pxii_bec.git', 'name': 'pxii_bec'},
          {url: 'https://github.com/bec-project/sim_bec.git', 'name': 'sim_bec'},
          {url: 'https://github.com/bec-project/superxas_bec.git', 'name': 'superxas_bec'},
          {url: 'https://github.com/bec-project/tomcat_bec.git', 'name': 'tomcat_bec'},
          {url: 'https://github.com/bec-project/xtreme_bec.git', 'name': 'xtreme_bec'},
        ]

    name: Plugin ${{ matrix.beamline_repo.name }}

    steps:
      - name: Checkout BEC Core
        uses: actions/checkout@v4
        with:
          repository: bec-project/bec
          ref: ${{ inputs.BEC_CORE_BRANCH }}

      - name: Install and test a BEC plugin repository
        uses: ./.github/actions/plugin_repo_tests
        with:
          BEC_CORE_BRANCH: ${{ inputs.BEC_CORE_BRANCH }}
          BEC_WIDGETS_BRANCH: ${{ inputs.BEC_WIDGETS_BRANCH }}
          OPHYD_DEVICES_BRANCH: ${{ inputs.OPHYD_DEVICES_BRANCH }}
          BEC_PLUGIN_REPO_URL: ${{ matrix.beamline_repo.url }}
          PYTHON_VERSION: '3.11'

      

    