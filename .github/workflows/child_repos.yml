name: Run child repository tests for ophyd_devices and bec_widgets
on: 
  workflow_call:
    inputs:
      BEC_WIDGETS_BRANCH:
        description: 'Branch for BEC Widgets'
        required: false
        default: 'main'
        type: string
      BEC_CORE_BRANCH:
        description: 'Branch for BEC Core'
        required: false
        default: 'main'
        type: string
      OPHYD_DEVICES_BRANCH:
        description: 'Branch for Ophyd Devices'
        required: false
        default: 'main'
        type: string


jobs:
  bec-widgets:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    env: 
      QTWEBENGINE_DISABLE_SANDBOX: 1
      QT_QPA_PLATFORM: "offscreen"

    steps:
      - name: Checkout BEC Widgets
        uses: actions/checkout@v4
        with:
          repository: bec-project/bec_widgets
          ref: ${{ inputs.BEC_WIDGETS_BRANCH }}

      - name: Install BEC Widgets and dependencies
        uses: ./.github/actions/bw_install
        with:
          BEC_WIDGETS_BRANCH: ${{ inputs.BEC_WIDGETS_BRANCH }}
          BEC_CORE_BRANCH: ${{ inputs.BEC_CORE_BRANCH }}
          OPHYD_DEVICES_BRANCH: ${{ inputs.OPHYD_DEVICES_BRANCH }}
          PYTHON_VERSION: '3.11'
      - name: Run Pytest
        run: |
          pip install pytest pytest-random-order
          pytest -v --maxfail=2 --junitxml=report.xml --random-order ./tests/unit_tests
  ophyd_devices:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout Ophyd Devices
        uses: actions/checkout@v4
        with:
          repository: bec-project/ophyd_devices
          ref: ${{ inputs.OPHYD_DEVICES_BRANCH }}

      - name: Install Ophyd Devices and dependencies
        uses: ./.github/actions/ophyd_devices_install
        with:
          OPHYD_DEVICES_BRANCH: ${{ inputs.OPHYD_DEVICES_BRANCH }}
          BEC_CORE_BRANCH: ${{ inputs.BEC_CORE_BRANCH }}
          PYTHON_VERSION: '3.11'
      - name: Run Pytest
        run: |
          pip install pytest pytest-random-order
          pytest -v --maxfail=2 --junitxml=report.xml --random-order ./tests
      

    