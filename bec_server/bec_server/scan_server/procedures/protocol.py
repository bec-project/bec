from typing import Protocol

from bec_server.scan_server.procedures.constants import ContainerWorkerEnv, PodmanContainerStates


class ContainerCommandOutput(Protocol):

    def pretty_print(self) -> str: ...


class ContainerCommandBackend(Protocol):

    def _build_image(
        self, buildargs: dict, path: str, file: str, volume: str, tag: str
    ) -> ContainerCommandOutput: ...
    def build_requirements_image(self) -> ContainerCommandOutput: ...
    def build_worker_image(self) -> ContainerCommandOutput: ...
    def image_exists(self, image_tag) -> bool: ...
    def run(self, image_tag: str, environment: ContainerWorkerEnv) -> str: ...
    def kill(self, id: str): ...
    def state(self, id: str) -> PodmanContainerStates | None: ...
